"""
Snowflake query to fetch data for Inference data pipeline
"""


def sf_so_line_data_query(
    start_date: str,
    end_date: str,
) -> str:
    """
    Function to retrieve the query to fetch so schedule line data from snowflake.

    Args:
        start_date (str): start date to use for filtering data, if needed
        end_date (str): end date to use for filtering data, if needed

    Returns (str):
        query

    """

    query = f"""
    WITH FULL_CASE AS (
        SELECT 
            PRODUCT_CODE, 
            SIZE_CODE, 
            MAX(CARTON_QUANTITY) AS FULL_CASE_QUANTITY_MAX,
            MODE(CARTON_QUANTITY) AS FULL_CASE_QUANTITY_MODE
        FROM EMEA_DA_CONS_PROD.INBOUND.SHIPMENT_CARTON_DETAILS_V
        --WHERE SHIPMENT_TYPE_CODE = 'Z001'
        GROUP BY 
            PRODUCT_CODE, SIZE_CODE
    ),
    FULL_CASE_BACKUP AS (
        SELECT
            SILHOUETTE,
            AVG(FULL_CASE_QUANTITY_MAX) AS FULL_CASE_QUANTITY_MAX,
            AVG(FULL_CASE_QUANTITY_MODE) AS FULL_CASE_QUANTITY_MODE
        FROM (
            SELECT 
                SD.PRODUCT_CODE, 
                SILHOUETTE,
                MAX(CARTON_QUANTITY) AS FULL_CASE_QUANTITY_MAX,
                MODE(CARTON_QUANTITY) AS FULL_CASE_QUANTITY_MODE
            FROM EMEA_DA_CONS_PROD.INBOUND.SHIPMENT_CARTON_DETAILS_V SD
            INNER JOIN EMEA_DA_FDN_PROD.MASTER_DATA.DIM_PRODUCT PROD
            ON SD.PRODUCT_CODE = PROD.PRODUCT_CODE
                AND PROD.CURRENT_INDICATOR = 1
            INNER JOIN EMEA_DA_FDN_PROD.MASTER_DATA.DIM_SILHOUETTE SILH
                ON PROD.SK_SILHOUETTE = SILH.SK_SILHOUETTE
                AND SILH.CURRENT_INDICATOR = 1
            --WHERE SHIPMENT_TYPE_CODE = 'Z001'
            GROUP BY
                SD.PRODUCT_CODE, SILHOUETTE
        )
        GROUP BY SILHOUETTE
    ),
    VAS AS (
        -- one sosl can have multiple vas operations, 
        -- for that reason we are encoding the vas_packg_cd to boolean variables
        SELECT
            VAS.SO_DOC_HDR_NBR,
            VAS.SO_LN_ITM_NBR,
            VAS.SO_SCHED_LN_NBR,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'ZP1', 1, 0)) AS VAS_CODE_ZP1,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'SK', 1, 0)) AS VAS_CODE_SK,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'C20', 1, 0)) AS VAS_CODE_C20,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'C4X', 1, 0)) AS VAS_CODE_C4X,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'PR', 1, 0)) AS VAS_CODE_PR,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'C90', 1, 0)) AS VAS_CODE_C90,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'STD', 1, 0)) AS VAS_CODE_STD,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'CL1', 1, 0)) AS VAS_CODE_CL1,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'LBC', 1, 0)) AS VAS_CODE_LBC,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'SM', 1, 0)) AS VAS_CODE_SM,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'CU', 1, 0)) AS VAS_CODE_CU,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'ES', 1, 0)) AS VAS_CODE_ES,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'C40', 1, 0)) AS VAS_CODE_C40,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'CTU', 1, 0)) AS VAS_CODE_CTU,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'CLX', 1, 0)) AS VAS_CODE_CLX,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) = 'SZU', 1, 0)) AS VAS_CODE_SZU,
            MAX(IFF(TRIM(VAS.VAS_PACKG_CD) NOT IN (
                'ZP1', 'SK', 'C20', 'C4X', 
                'PR', 'C90', 'STD', 'CL1', 
                'LBC', 'SM', 'CU', 'ES', 
                'C40', 'CTU', 'CLX', 'SZU'
            ) AND VAS.VAS_PACKG_CD IS NOT NULL, 1, 0)) AS VAS_CODE_REST,
            MAX(IFF(VAS.VAS_PACKG_CD IS NULL, 1, 0)) AS VAS_CODE_NONE
        FROM EMEA_DA_CONS_PROD.MPO.VALUE_ADDED_SERVICES_V VAS 
        GROUP BY 
            VAS.SO_DOC_HDR_NBR,
            VAS.SO_LN_ITM_NBR,
            VAS.SO_SCHED_LN_NBR
    ),
    AVG_PER_SILHOUETTE AS (
        SELECT
            OBF.SILH_DESC AS SILHOUETTE,
            OBF.SO_HDR_CRT_DATE AS SALES_ORDER_HEADER_DOCUMENT_DATE,
            -- COUNT(DISTINCT CI.CARTON_NUMBER) AS TOTAL_CARTONS,
            -- SUM(CI.ACTUAL_DELIVERY_UNITS_QUANTITY) AS TOTAL_UNITS,
            -- UNBOUNDED CAN BE REPLACED BY A NUMBER TO INDICATE HOW MANY DAYS WE WANT TO USE IN THE SUM
            SUM(SUM(CI.ACTUAL_DELIVERY_UNITS_QUANTITY)) over (order by SO_HDR_CRT_DATE asc rows between unbounded preceding and current row) / 
                SUM(COUNT(DISTINCT CI.CARTON_NUMBER)) over (order by SO_HDR_CRT_DATE asc rows between unbounded preceding and current row) AS AVG_UNITS_PER_CARTON_SILHOUETTE
        FROM EMEA_DA_FDN_PROD.DCDASH.CONSUMABLE_CARTON_ITEM_FULL CI
        INNER JOIN EMEA_DA_CONS_PROD.DCDASH.VIEW_CONSUMABLE_OUTBOUND_DELIVERY_DOC_DETAIL DD
            ON CI.OUTBOUND_DELIVERY_HEADER_NUMBER = DD.OUTBOUND_DELIVERY_HEADER_NUMBER
            AND CI.PRODUCT_CODE = DD.PRODUCT_CODE
            AND CI.SIZE_CODE = DD.SIZE_CODE 
        INNER JOIN (SELECT SO_DOC_HDR_NBR, SILH_DESC, SO_HDR_CRT_DATE FROM EMEA_DA_CONS_PROD.MPO.ORDERBOOK_FOUNDATION_V GROUP BY SO_DOC_HDR_NBR, SILH_DESC, SO_HDR_CRT_DATE) OBF
            ON DD.SALES_ORDER_NUMBER = OBF.SO_DOC_HDR_NBR
        WHERE SO_HDR_CRT_DATE >= '2021-01-01'
        GROUP BY 
            OBF.SILH_DESC,
            OBF.SO_HDR_CRT_DATE
    ),
AVG_PER_CUSTOMER AS (
        SELECT
            OBF.CUST_SHIP_TO_CD AS SHIP_TO_CUSTOMER_NUMBER,
            OBF.SO_HDR_CRT_DATE AS SALES_ORDER_HEADER_DOCUMENT_DATE,
            --COUNT(DISTINCT CARTON_NUMBER) AS TOTAL_CARTONS,
            --SUM(ACTUAL_DELIVERY_UNITS_QUANTITY) AS TOTAL_UNITS,
            -- UNBOUNDED CAN BE REPLACED BY A NUMBER TO INDICATE HOW MANY DAYS WE WANT TO USE IN THE SUM
            SUM(COALESCE(SUM(ACTUAL_DELIVERY_UNITS_QUANTITY), 1)) over (order by SO_HDR_CRT_DATE asc rows between unbounded preceding and current row) / 
                SUM(COALESCE(NULLIFZERO(COUNT(DISTINCT CARTON_NUMBER)), 1)) over (order by SO_HDR_CRT_DATE asc rows between unbounded preceding and current row) AS AVG_UNITS_PER_CARTON_CUSTOMER
        FROM EMEA_DA_FDN_PROD.DCDASH.CONSUMABLE_CARTON_ITEM_FULL CI
        INNER JOIN EMEA_DA_CONS_PROD.DCDASH.VIEW_CONSUMABLE_OUTBOUND_DELIVERY_DOC_DETAIL DD
            ON CI.OUTBOUND_DELIVERY_HEADER_NUMBER = DD.OUTBOUND_DELIVERY_HEADER_NUMBER
            AND CI.PRODUCT_CODE = DD.PRODUCT_CODE
            AND CI.SIZE_CODE = DD.SIZE_CODE 
        RIGHT JOIN (SELECT SO_DOC_HDR_NBR, SO_HDR_CRT_DATE, CUST_SHIP_TO_CD FROM EMEA_DA_CONS_PROD.MPO.ORDERBOOK_FOUNDATION_V GROUP BY SO_DOC_HDR_NBR, SO_HDR_CRT_DATE, CUST_SHIP_TO_CD) OBF
            ON DD.SALES_ORDER_NUMBER = OBF.SO_DOC_HDR_NBR
        WHERE OBF.CUST_SHIP_TO_CD IS NOT NULL
        AND SO_HDR_CRT_DATE >= '2021-01-01'
        GROUP BY OBF.CUST_SHIP_TO_CD, OBF.SO_HDR_CRT_DATE    
    ),
    BASE AS (
        SELECT
            OBF.SO_DOC_HDR_NBR AS SALES_ORDER_HEADER_NUMBER, 
            OBF.SO_LN_ITM_NBR AS SALES_ORDER_ITEM_NUMBER,
            OBF.SO_SCHED_LN_NBR AS SALES_ORDER_SCHEDULE_LINE_NUMBER,
            OBF.CUST_SHIP_TO_CD AS SHIP_TO_CUSTOMER_NUMBER,
            OBF.CNFRMD_QTY AS ORDER_SCHEDULE_LINE_QTY,
            OBF.DISTRIB_MTHD_CD AS DISTRIBUTION_CHANNEL,
            OBF.CUST_CHNL_DESC AS CHANNEL_CLASS,
            OBF.DIV_CD AS DIVISION_CODE,
            OBF.PROD_CD AS PRODUCT_CODE,
            OBF.SZ_DESC AS SIZE_CODE,
            OBF.GNDR_AGE_DESC AS GENDER_AGE_DESC,
            COALESCE(FULL_CASE.FULL_CASE_QUANTITY_MAX, FULL_CASE_BACKUP.FULL_CASE_QUANTITY_MAX) AS FULL_CASE_QUANTITY_MAX,
            COALESCE(FULL_CASE.FULL_CASE_QUANTITY_MODE, FULL_CASE_BACKUP.FULL_CASE_QUANTITY_MODE) AS FULL_CASE_QUANTITY_MODE,
            OBF.SILH_DESC AS SILHOUETTE,
            OBF.SO_ITM_VAS_IND AS SALES_ORDER_ITEM_VAS_INDICATOR,
            COALESCE(VAS_CODE_ZP1, 0) AS VAS_CODE_ZP1,
            COALESCE(VAS_CODE_SK, 0) AS VAS_CODE_SK,
            COALESCE(VAS_CODE_C20, 0) AS VAS_CODE_C20,
            COALESCE(VAS_CODE_C4X, 0) AS VAS_CODE_C4X,
            COALESCE(VAS_CODE_PR, 0) AS VAS_CODE_PR,
            COALESCE(VAS_CODE_C90, 0) AS VAS_CODE_C90,
            COALESCE(VAS_CODE_STD, 0) AS VAS_CODE_STD,
            COALESCE(VAS_CODE_CL1, 0) AS VAS_CODE_CL1,
            COALESCE(VAS_CODE_LBC, 0) AS VAS_CODE_LBC,
            COALESCE(VAS_CODE_SM, 0) AS VAS_CODE_SM,
            COALESCE(VAS_CODE_CU, 0) AS VAS_CODE_CU,
            COALESCE(VAS_CODE_ES, 0) AS VAS_CODE_ES,
            COALESCE(VAS_CODE_C40, 0) AS VAS_CODE_C40,
            COALESCE(VAS_CODE_CTU, 0) AS VAS_CODE_CTU,
            COALESCE(VAS_CODE_CLX, 0) AS VAS_CODE_CLX,
            COALESCE(VAS_CODE_SZU, 0) AS VAS_CODE_SZU,
            COALESCE(VAS_CODE_REST, 0) AS VAS_CODE_REST,
            COALESCE(VAS_CODE_NONE, 0) AS VAS_CODE_NONE,
            OBF.SHPG_LCTN_CD AS SHIPPING_LOCATION_CODE,
            OBF.SO_TYPE_DESC AS SALES_ORDER_TYPE,
            CUST.COUNTRY_CODE,
            CUST.CUSTOMER_ACCOUNT_GROUP_CODE,
            OBF.AA_IND AS AA_INDICATOR,
            SO_HDR_CRT_DATE AS SALES_ORDER_HEADER_DOCUMENT_DATE
        FROM EMEA_DA_CONS_PROD.MPO.ORDERBOOK_FOUNDATION_V OBF
        LEFT JOIN FULL_CASE
            ON FULL_CASE.PRODUCT_CODE = OBF.PROD_CD
            AND FULL_CASE.SIZE_CODE = OBF.SZ_DESC
        LEFT JOIN FULL_CASE_BACKUP
            ON FULL_CASE_BACKUP.SILHOUETTE = OBF.SILH_DESC
        LEFT JOIN EMEA_DA_FDN_PROD.MASTER_DATA.DIM_CUSTOMER_MASTER CUST
            ON CUST.CUSTOMER_NUMBER = OBF.CUST_SHIP_TO_CD
            AND CUST.CURRENT_INDICATOR = 1
        LEFT JOIN VAS
            ON VAS.SO_DOC_HDR_NBR = OBF.SO_DOC_HDR_NBR
            AND VAS.SO_LN_ITM_NBR = OBF.SO_LN_ITM_NBR
            AND VAS.SO_SCHED_LN_NBR = OBF.SO_SCHED_LN_NBR
        WHERE   OBF.ACTVIND='Y'
            AND OBF.SO_HDRACTVIND='Y'
            AND OBF.SO_ITMACTVIND='Y'
            AND OBF.SO_SCHEDACTVIND='Y'
            AND OBF.SO_TYPE_CD IN ('Z001','Z003','Z004','Z005','Z011','Z014','Z020','Z030')
            AND OBF.RMAING_TO_SHIP_RPTG_CNFRMD_QTY > 0
            -- AND OBF.SO_IDP_IND = 'X' -- NEEDED, I am checking with Shenyang??
            AND (
                CASE  WHEN OBF.DLVRY_TYPE_IND = 'O'
                THEN COALESCE(OBF.TOT_SHPD_QTY,0)
                ELSE 0 end = 0 OR
                CASE WHEN OBF.DLVRY_TYPE_IND = 'I'
                THEN COALESCE(OBF.TOT_SHPD_QTY,0)
                ELSE 0 end = 0
            )
    )
    SELECT 
        BASE.SALES_ORDER_HEADER_NUMBER, 
        BASE.SALES_ORDER_ITEM_NUMBER,
        BASE.SALES_ORDER_SCHEDULE_LINE_NUMBER,
        BASE.SHIP_TO_CUSTOMER_NUMBER,
        BASE.CHANNEL_CLASS,
        BASE.DISTRIBUTION_CHANNEL,
        BASE.DIVISION_CODE,
        BASE.PRODUCT_CODE,
        BASE.SIZE_CODE,
        BASE.GENDER_AGE_DESC,
        BASE.SILHOUETTE,
        BASE.SALES_ORDER_ITEM_VAS_INDICATOR,
        BASE.VAS_CODE_ZP1,
        BASE.VAS_CODE_SK,
        BASE.VAS_CODE_C20,
        BASE.VAS_CODE_C4X,
        BASE.VAS_CODE_PR,
        BASE.VAS_CODE_C90,
        BASE.VAS_CODE_STD,
        BASE.VAS_CODE_CL1,
        BASE.VAS_CODE_LBC,
        BASE.VAS_CODE_SM,
        BASE.VAS_CODE_CU,
        BASE.VAS_CODE_ES,
        BASE.VAS_CODE_C40,
        BASE.VAS_CODE_CTU,
        BASE.VAS_CODE_CLX,
        BASE.VAS_CODE_SZU,
        BASE.VAS_CODE_REST,
        BASE.VAS_CODE_NONE,
        BASE.SHIPPING_LOCATION_CODE,
        BASE.COUNTRY_CODE,
        BASE.CUSTOMER_ACCOUNT_GROUP_CODE,
        BASE.SALES_ORDER_TYPE,
        BASE.AA_INDICATOR,
        MAX(BASE.FULL_CASE_QUANTITY_MAX) AS FULL_CASE_QUANTITY_MAX,
        MAX(BASE.FULL_CASE_QUANTITY_MODE) AS FULL_CASE_QUANTITY_MODE,
        MAX(BASE.ORDER_SCHEDULE_LINE_QTY) AS SOSL_TOTAL_QTY,
        -- Since we added delivery docs we have to 'deduplicate' the quantities here to get the correct number on item and header level
        SUM(MAX(BASE.ORDER_SCHEDULE_LINE_QTY)) OVER (PARTITION BY BASE.SALES_ORDER_HEADER_NUMBER, BASE.SALES_ORDER_ITEM_NUMBER) AS SOI_TOTAL_QUANTITY,
        SUM(MAX(BASE.ORDER_SCHEDULE_LINE_QTY)) OVER (PARTITION BY BASE.SALES_ORDER_HEADER_NUMBER) AS SOH_TOTAL_QUANTITY,
        SUM(BASE.ORDER_SCHEDULE_LINE_QTY) / MAX(BASE.FULL_CASE_QUANTITY_MAX) AS SOSL_FULL_CASE_MAX_EQUIVALENT,
        SUM(BASE.ORDER_SCHEDULE_LINE_QTY) / MAX(BASE.FULL_CASE_QUANTITY_MODE) AS SOSL_FULL_CASE_MODE_EQUIVALENT,
        SUM(MAX(BASE.ORDER_SCHEDULE_LINE_QTY)) OVER (PARTITION BY BASE.SALES_ORDER_HEADER_NUMBER, BASE.SALES_ORDER_ITEM_NUMBER) / MAX(BASE.FULL_CASE_QUANTITY_MAX) AS SOI_FULL_CASE_MAX_EQUIVALENT,
        SUM(MAX(BASE.ORDER_SCHEDULE_LINE_QTY)) OVER (PARTITION BY BASE.SALES_ORDER_HEADER_NUMBER, BASE.SALES_ORDER_ITEM_NUMBER) / MAX(BASE.FULL_CASE_QUANTITY_MODE) AS SOI_FULL_CASE_MODE_EQUIVALENT,
        SUM(MAX(BASE.ORDER_SCHEDULE_LINE_QTY)) OVER (PARTITION BY BASE.SALES_ORDER_HEADER_NUMBER) / MAX(BASE.FULL_CASE_QUANTITY_MAX) AS SOH_FULL_CASE_MAX_EQUIVALENT,
        SUM(MAX(BASE.ORDER_SCHEDULE_LINE_QTY)) OVER (PARTITION BY BASE.SALES_ORDER_HEADER_NUMBER) / MAX(BASE.FULL_CASE_QUANTITY_MODE) AS SOH_FULL_CASE_MODE_EQUIVALENT,
        -- !!! APPLY FORWARD FILL IN PYTHON FOR AVG_UNITS_PER_CARTON_SILHOUETTE
        MAX(AVG_PER_SILHOUETTE.AVG_UNITS_PER_CARTON_SILHOUETTE) AS AVG_UNITS_PER_CARTON_SILHOUETTE,
        -- !!! APPLY FORWARD FILL IN PYTHON FOR AVG_UNITS_PER_CARTON_CUSTOMER
        MAX(AVG_PER_CUSTOMER.AVG_UNITS_PER_CARTON_CUSTOMER) AS AVG_UNITS_PER_CARTON_CUSTOMER,
        BASE.SALES_ORDER_HEADER_DOCUMENT_DATE
    FROM BASE
    LEFT JOIN AVG_PER_SILHOUETTE
        ON AVG_PER_SILHOUETTE.SILHOUETTE = BASE.SILHOUETTE
        AND AVG_PER_SILHOUETTE.SALES_ORDER_HEADER_DOCUMENT_DATE = BASE.SALES_ORDER_HEADER_DOCUMENT_DATE
    LEFT JOIN AVG_PER_CUSTOMER
        ON AVG_PER_CUSTOMER.SHIP_TO_CUSTOMER_NUMBER = BASE.SHIP_TO_CUSTOMER_NUMBER
        AND AVG_PER_CUSTOMER.SALES_ORDER_HEADER_DOCUMENT_DATE = BASE.SALES_ORDER_HEADER_DOCUMENT_DATE
    GROUP BY 
        BASE.SALES_ORDER_HEADER_NUMBER, 
        BASE.SALES_ORDER_ITEM_NUMBER,
        BASE.SALES_ORDER_SCHEDULE_LINE_NUMBER,
        BASE.SHIP_TO_CUSTOMER_NUMBER,
        BASE.CHANNEL_CLASS,
        BASE.DISTRIBUTION_CHANNEL,
        BASE.DIVISION_CODE,
        BASE.PRODUCT_CODE,
        BASE.SIZE_CODE,
        BASE.GENDER_AGE_DESC,
        BASE.SILHOUETTE,
        BASE.SALES_ORDER_ITEM_VAS_INDICATOR,
        BASE.VAS_CODE_ZP1,
        BASE.VAS_CODE_SK,
        BASE.VAS_CODE_C20,
        BASE.VAS_CODE_C4X,
        BASE.VAS_CODE_PR,
        BASE.VAS_CODE_C90,
        BASE.VAS_CODE_STD,
        BASE.VAS_CODE_CL1,
        BASE.VAS_CODE_LBC,
        BASE.VAS_CODE_SM,
        BASE.VAS_CODE_CU,
        BASE.VAS_CODE_ES,
        BASE.VAS_CODE_C40,
        BASE.VAS_CODE_CTU,
        BASE.VAS_CODE_CLX,
        BASE.VAS_CODE_SZU,
        BASE.VAS_CODE_REST,
        BASE.VAS_CODE_NONE,
        BASE.SHIPPING_LOCATION_CODE,
        BASE.COUNTRY_CODE,
        BASE.CUSTOMER_ACCOUNT_GROUP_CODE,
        BASE.SALES_ORDER_TYPE,
        BASE.AA_INDICATOR,
        BASE.SALES_ORDER_HEADER_DOCUMENT_DATE
    ;
    """
    return query
