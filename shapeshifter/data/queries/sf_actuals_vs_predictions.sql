WITH CARTONS AS (
    SELECT
        C.PACKLIST_NUMBER,
        C.CARTON_NUMBER,
        C.CARTON_SIZE_TYPE_DESCRIPTION,
        C.ACTUAL_DELIVERY_UNITS_QUANTITY,
        C.OUTBOUND_CARTON_VOLUME,
        C.CMR_TIMESTAMP_CET
    FROM EMEA_DA_FDN_PROD.DCDASH.CONSUMABLE_CARTON_FULL C
    WHERE   C.DIGITAL_FLAG = 'N'
        AND C.ACTUAL_DELIVERY_UNITS_QUANTITY > 0
),
ACTUALS AS (
    	SELECT 
        A.SALES_ORDER_HEADER_NUMBER, 
        A.SALES_ORDER_ITEM_NUMBER,
        A.SALES_ORDER_SCHEDULE_LINE_NUMBER,
        MAX(ORDERED_UNITS) AS ORDERED_UNITS,
        SUM(SHIPPED_UNITS) AS SHIPPED_UNITS,
        SUM(A.ITEM_CARTON_RATIO) AS NBR_CARTONS_RATIO
    FROM (
        SELECT
            SOH.SALES_ORDER_HEADER_NUMBER, 
            SOI.SALES_ORDER_ITEM_NUMBER,
            SOSL.SALES_ORDER_SCHEDULE_LINE_NUMBER,
            SOSL.ORDER_ENTRY_QUANTITY_BASE_UOM AS ORDERED_UNITS,
            CI.ACTUAL_DELIVERY_UNITS_QUANTITY AS SHIPPED_UNITS,
            CI.ACTUAL_DELIVERY_UNITS_QUANTITY / C.ACTUAL_DELIVERY_UNITS_QUANTITY AS ITEM_CARTON_RATIO
        FROM EMEA_DA_FDN_PROD.MASTER_DATA.FACT_SALES_ORDER_HEADER SOH
        INNER JOIN EMEA_DA_FDN_PROD.MASTER_DATA.FACT_SALES_ORDER_ITEM SOI
            ON SOH.SK_SALES_ORDER_HEADER = SOI.SK_SALES_ORDER_HEADER
            AND SOI.ACTIVE_FLAG = 'Y'
            AND SOI.CURRENT_INDICATOR = 1
            AND SOI.RETURNS_ITEM_INDICATOR = 'N'
        INNER JOIN EMEA_DA_FDN_PROD.MASTER_DATA.FACT_SALES_ORDER_SCHEDULE_LINE SOSL
            ON SOH.SK_SALES_ORDER_HEADER = SOSL.SK_SALES_ORDER_HEADER
            AND SOI.SK_SALES_ORDER_ITEM = SOSL.SK_SALES_ORDER_ITEM
            AND SOSL.CURRENT_INDICATOR = 1
            AND SOSL.ACTIVE_FLAG = 'Y'
        INNER JOIN EMEA_DA_FDN_PROD.MASTER_DATA.FACT_OUTBOUND_DELIVERY_SCHEDULE_LINE DD
            ON DD.SALES_ORDER_HEADER_NUMBER = SOH.SALES_ORDER_HEADER_NUMBER
            AND DD.SALES_ORDER_ITEM_NUMBER = SOI.SALES_ORDER_ITEM_NUMBER
            AND DD.SALES_ORDER_SCHEDULE_LINE_NUMBER = SOSL.SALES_ORDER_SCHEDULE_LINE_NUMBER
        INNER JOIN EMEA_DA_FDN_PROD.DCDASH.CONSUMABLE_CARTON_ITEM_FULL CI
            ON CI.OUTBOUND_DELIVERY_HEADER_NUMBER = DD.OUTBOUND_DELIVERY_HEADER_NUMBER
            AND CI.OUTBOUND_DELIVERY_SCHEDULE_LINE_NUMBER = DD.OUTBOUND_DELIVERY_SCHEDULE_NUMBER
            AND CI.PRODUCT_CODE = DD.PRODUCT_CODE
            AND CI.SIZE_CODE = DD.SIZE_CODE
        INNER JOIN CARTONS C
            ON C.CARTON_NUMBER = CI.CARTON_NUMBER
        WHERE   SOH.ACTIVE_FLAG = 'Y'
            AND SOH.CURRENT_INDICATOR = 1
            AND SOSL.SALES_ODER_SCHEDULE_LINE_CREATION_DATE BETWEEN '2022-01-01' AND '2024-01-01'
    ) A
    GROUP BY 
        A.SALES_ORDER_HEADER_NUMBER, 
        A.SALES_ORDER_ITEM_NUMBER,
        A.SALES_ORDER_SCHEDULE_LINE_NUMBER
),
PREDICTIONS AS (
    SELECT DISTINCT
        SALES_ORDER_HEADER_NUMBER,
        SALES_ORDER_ITEM_NUMBER,
        SALES_ORDER_SCHEDULE_LINE_NUMBER,
        FIRST_VALUE(PREDICTED_CARTONS) OVER (partition by
                     SALES_ORDER_HEADER_NUMBER,  
                     SALES_ORDER_ITEM_NUMBER,  
                     SALES_ORDER_SCHEDULE_LINE_NUMBER  
                     order by COALESCE(PREDICTION_TIMESTAMP, '1900-01-01') desc) AS PREDICTED_CARTONS,
        FIRST_VALUE(PREDICTED_PALLETS) OVER (partition by
                     SALES_ORDER_HEADER_NUMBER,
                     SALES_ORDER_ITEM_NUMBER,
                     SALES_ORDER_SCHEDULE_LINE_NUMBER
                     order by COALESCE(PREDICTION_TIMESTAMP, '1900-01-01') desc) AS PREDICTED_PALLETS,
        FIRST_VALUE(CREATION_DATE) OVER (partition by
                     SALES_ORDER_HEADER_NUMBER,
                     SALES_ORDER_ITEM_NUMBER,
                     SALES_ORDER_SCHEDULE_LINE_NUMBER
                     order by COALESCE(PREDICTION_TIMESTAMP, '1900-01-01') desc) AS CREATION_DATE
    FROM EMEA_DA_FDN_DEV.ADVANCEDANALYTICS.SALES_ORDER_UNIT_CONVERSIONS
)
SELECT 
	ACTUALS.SALES_ORDER_HEADER_NUMBER,
    SUM(ACTUALS.NBR_CARTONS_RATIO) AS NBR_CARTONS_RATIO,
    SUM(PREDICTIONS.PREDICTED_CARTONS) AS PREDICTED_CARTONS,
    MAX(PREDICTIONS.CREATION_DATE) AS CREATION_DATE,
    SUM(SHIPPED_UNITS) / SUM(ORDERED_UNITS) AS PERCENTAGE_DELIVERED
--ACTUALS.*, PREDICTIONS.PREDICTED_CARTONS, PREDICTIONS.CREATION_DATE
FROM ACTUALS
INNER JOIN PREDICTIONS 
ON TO_NUMBER(ACTUALS.SALES_ORDER_HEADER_NUMBER) = TO_NUMBER(PREDICTIONS.SALES_ORDER_HEADER_NUMBER)
AND TO_NUMBER(ACTUALS.SALES_ORDER_ITEM_NUMBER) = TO_NUMBER(PREDICTIONS.SALES_ORDER_ITEM_NUMBER)
AND TO_NUMBER(ACTUALS.SALES_ORDER_SCHEDULE_LINE_NUMBER) = TO_NUMBER(PREDICTIONS.SALES_ORDER_SCHEDULE_LINE_NUMBER)
WHERE PREDICTIONS.CREATION_DATE >= '2023-02-01'
GROUP BY ACTUALS.SALES_ORDER_HEADER_NUMBER
;


